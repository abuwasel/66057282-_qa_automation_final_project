{"name": "Check the balance of the account is 250", "status": "failed", "statusDetails": {"message": "AssertionError: Expected Balance: 2500, but got: 250.0\nassert 250.0 == 2500", "trace": "url = 'https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login'\nselectors = {'Add Customer btn': 'body > div > div > div.ng-scope > div > div.center > button:nth-child(1)', 'Add Customer submit'... Manager Login btn': 'body > div > div > div.ng-scope > div > div.borderM.box.padT20 > div:nth-child(3) > button', ...}\n\n    @allure.title(\"Check the balance of the account is 250\")\n    @allure.description(\"Log in to the system with one of the existing users,make a deposit of 250 and see that the account balance has changed accordingly.\")\n    @allure.label(\"owner\", \"Ibrahim Abu Wasel\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    # Allure supports next severity levels: TRIVIAL, MINOR, NORMAL, CRITICAL , BLOCKER. By default, all tests marks with NORMAL severity.\n    def test_login_deposit_250_and_check_balance(url, selectors):\n        \"\"\"\n        Log in to the system with one of the existing users,\n        make a deposit of 250 and see that the account balance has changed accordingly.\n    \n        Expected: 250\n        \"\"\"\n        driver = init_driver(url)\n        time.sleep(2)\n        # List of selector keys in the order of execution\n        actions = [\n            ('Customer Login btn', None),\n            ('Harry Potter', None),\n            ('Login btn', None),\n            ('Deposit btn', None),\n            ('amount input', 250),\n            ('Deposit submit', None)\n        ]\n    \n        for action in actions:\n            if action[1] is not None:\n                handle_element(driver, selectors[action[0]], action[1])\n            else:\n                handle_element(driver, selectors[action[0]])\n            time.sleep(1)\n    \n        expected_balance = 2500\n        actual_balance = get_items_as_number(driver, selectors['Balance'])\n        try:\n            assert actual_balance == expected_balance, f'Expected Balance: {expected_balance}, but got: {actual_balance}'\n        except AssertionError as e:\n            # Capture a screenshot and save it if the assertion fails\n            capture_a_screenshot_and_save_it(driver)\n>           raise e\n\ntest_selenium.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nurl = 'https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login'\nselectors = {'Add Customer btn': 'body > div > div > div.ng-scope > div > div.center > button:nth-child(1)', 'Add Customer submit'... Manager Login btn': 'body > div > div > div.ng-scope > div > div.borderM.box.padT20 > div:nth-child(3) > button', ...}\n\n    @allure.title(\"Check the balance of the account is 250\")\n    @allure.description(\"Log in to the system with one of the existing users,make a deposit of 250 and see that the account balance has changed accordingly.\")\n    @allure.label(\"owner\", \"Ibrahim Abu Wasel\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    # Allure supports next severity levels: TRIVIAL, MINOR, NORMAL, CRITICAL , BLOCKER. By default, all tests marks with NORMAL severity.\n    def test_login_deposit_250_and_check_balance(url, selectors):\n        \"\"\"\n        Log in to the system with one of the existing users,\n        make a deposit of 250 and see that the account balance has changed accordingly.\n    \n        Expected: 250\n        \"\"\"\n        driver = init_driver(url)\n        time.sleep(2)\n        # List of selector keys in the order of execution\n        actions = [\n            ('Customer Login btn', None),\n            ('Harry Potter', None),\n            ('Login btn', None),\n            ('Deposit btn', None),\n            ('amount input', 250),\n            ('Deposit submit', None)\n        ]\n    \n        for action in actions:\n            if action[1] is not None:\n                handle_element(driver, selectors[action[0]], action[1])\n            else:\n                handle_element(driver, selectors[action[0]])\n            time.sleep(1)\n    \n        expected_balance = 2500\n        actual_balance = get_items_as_number(driver, selectors['Balance'])\n        try:\n>           assert actual_balance == expected_balance, f'Expected Balance: {expected_balance}, but got: {actual_balance}'\nE           AssertionError: Expected Balance: 2500, but got: 250.0\nE           assert 250.0 == 2500\n\ntest_selenium.py:47: AssertionError"}, "description": "Log in to the system with one of the existing users,make a deposit of 250 and see that the account balance has changed accordingly.", "attachments": [{"name": "screenshot-2023-09-06_14-30-54", "source": "1d04b173-794e-4dd5-88f9-b1486eaf806f-attachment.png", "type": "image/png"}], "start": 1693999843033, "stop": 1693999854374, "uuid": "7fde729b-a93e-4288-b03f-2f610e882bac", "historyId": "c4534ee9e4f854a77fe12f1afe82baee", "testCaseId": "c4534ee9e4f854a77fe12f1afe82baee", "fullName": "test_selenium#test_login_deposit_250_and_check_balance", "labels": [{"name": "severity", "value": "critical"}, {"name": "owner", "value": "Ibrahim Abu Wasel"}, {"name": "suite", "value": "test_selenium"}, {"name": "host", "value": "DESKTOP-G7A3TQO"}, {"name": "thread", "value": "7964-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_selenium"}]}